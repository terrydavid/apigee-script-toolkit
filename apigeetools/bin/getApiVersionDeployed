#!/bin/bash

# getDeployedApiVersion
#
# retrieves the revision number of any versions of an API that are deployed to an environment
#
# usage:
#   getDeployedApiVersion environment api

#set -e

USAGE="api"
TOOLSDIR="${APITOOLS_HOME}"

. "$TOOLSDIR/lib/functions"
parseCommandline "$@"
checkArgs 2

APINAME=${ARGS[0]}

debug "APINAME=${APINAME}"

if [ "$APINAME" = "" ]; then
	usefail "no API name specified"
fi

#URL="${APIGEE_HOST}/o/${ORGANIZATION}/e/${ENVIRONMENT}/apis/$(uri_escape "$API_NAME")/deployments"
URL="${MOST}/o/${ORGANIZATION}/e/${ENVIRONMENT}/apis/"$APINAME"/deployments"

debug "retrieving deployments of API ${API_NAME} from ${URL}"

http_get "$URL"

if [ "$STATUS_CODE" == "404" ]; then
	echo "Deployment Not Found"
elif [ "$STATUS_CODE" != "200" ]; then
	fail "$(basename "$0") failed with status $STATUS_CODE: $RESPONSE"
fi

JLIST=`echo "$RESPONSE" | $TOOLSDIR/lib/jp.sh | jsonValueOf "revision.*,0,.*name" | grep -v gateway`
debug "\nJLIST=$JLIST"
for a in $JLIST ; do printf "%b\n" $a | sed 's/\"//g' ; done

#APILIST=`echo "$RESPONSE" | awk 'BEGIN { RS = "[\n\r]+" } ; /revision.*,0,.*name/ {print $2}' | grep -v gateway`
#debug "\nAPILIST=$APILIST"
#for a in $APILIST ; do printf "%b\n" $a | sed 's/\"//g' ; done
