#!/bin/bash

# getApiVersions
#
# retrieves the revision number of all revisions of an API
#
# usage:
#   getApiRevisions host_alias api



USAGE="api_name"
TOOLSDIR="${APITOOLS_HOME}"
. "$TOOLSDIR/lib/functions"
parseCommandline "$@"
checkArgs 1

[[ $DEBUG -eq 6 ]] && set -x

APINAME=${ARGS[0]}

if [ "$APINAME" = "" ]; then
	usefail "No API name specified"
fi

# force json for now
FRMT=json

URL="${APIGEE_HOST}/o/${ORGANIZATION}/apis/${APINAME}/revisions"
debug "retrieving API ${APINAME} versions from ${URL}"

http_get "$URL"

if [ "$STATUS_CODE" != "200" ]; then
	fail "$(basename "$0") failed with status $STATUS_CODE: $RESPONSE"
fi

debug "RESPONSE= \n$RESPONSE"

# JLIST=`echo "$RESPONSE" | $TOOLSDIR/lib/jp.sh | jsonValueOf "revision"`
JLIST=`echo "$RESPONSE" | sed -e 's/\"\,//g' -e 's/\]//g' -e 's/\[//g'`
debug "JLIST: \n$JLIST"
for a in $JLIST ; do printf "%b\n" $a | sed 's/\"//g' ; done

# APILIST=`echo "$RESPONSE" | awk 'BEGIN { RS = "[, \n\r]+" } ; /revision.*,0,.*name/ {print $2}'`
# debug "APILIST=$APILIST"
# for a in $APILIST ; do printf "%b\n" $a ; done


