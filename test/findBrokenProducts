#!/bin/bash
#
# findBrokenProducts
#	find all the Api Products & Proxies, Developers and Dev Apps that are not linked properly in the db
#
#	Do the API proxy, API Product, Developer, Developer App. In that order to Create. Reverse to delete
#
# usage:
#   findBrokenProducts environment
#

#set -e

USAGE="environment"
TOOLSDIR="${APITOOLS_HOME}"

. "$TOOLSDIR/config/global"
. "$TOOLSDIR/lib/functions"

prodLoop () {
	# fix the field seperator so the "for" loops will work
	oldFS="$IFS"
	IFS=$(echo -en "\n\'\"")
	#set -v

	local output
	if [ "$FRMT" = "json" ] ; then
		output=`echo "$ApiProducts" | sed -e 's/\[[0-9]*\]//g' -e 's/\"//g' | trims`
	else
		output=`echo "$ApiProducts" | xmlValueOf "Item" | trims`
	fi
	ApiProducts="$output"
	debug "ApiProducts= \n$ApiProducts"

	for ap in $ApiProducts ; do
		output=`getProxFmProd ${OPTS[@]} "$HOST_ALIAS" "$ap"`
		ERRLVL="$?"
		debug "ERRLVL=${ERRLVL}\n"
		debug "Output=\n$output"

		if [ "$FRMT" = "json" ] ; then
			ApiProxFmP=`echo "$output" | sed -e 's/\[[0-9]*\]//g' -e 's/\"//g' | trims`
		else
			ApiProxFmP=`echo "$output" | xmlValueOf "Proxy"`
			#'\([nN]ame\)\|\([iI]tem\)\|\([mM]essage\)'`
		fi
		debug "ApiProxFmP=\n$ApiProxFmP"

		# If a Product has no Proxies we need to flag that
		if [ "$ApiProxFmP" = "" ] ; then 
			error "ApiProduct [$ap] has NO Proxies!"
		else
			echo "ApiProduct [$ap] has ApiProxies: "
			echo "$ApiProxFmP" | trims
		fi
	done
	IFS="$oldFS"
}

parseCommandline "$@"
checkArgs 1

loadConfig "${ARGS[0]}"

# find all the proxies in the product
if true ; then 
	ApiProducts=`getApiProducts ${OPTS[@]} "$HOST_ALIAS"`
	debug "ApiProducts= \n$ApiProducts"
	prodLoop
fi
