#!/bin/bash

# more_functions
# for parsing json (have to try these out some day)

function jsonpr {  # returns a key:value pair
    temp=`echo $json | sed 's/\\\\\//\//g' | sed 's/[{}]//g' | awk -v k="text" '{n=split($0,a,","); for (i=1; i<=n; i++) print a[i]}' | sed 's/\"\:\"/\|/g' | sed 's/[\,]/ /g' | sed 's/\"//g' | grep -w $prop`
    echo ${temp##*|}
}

# Usage: 
#json=`curl -s -X GET http://twitter.com/users/show/$1.json`
#prop='profile_image_url'
#picurl=`jsonval`
# `curl -s -X GET $picurl -o $1.png`

function jsonval {  # returns just the "value"
	temp=echo $json | sed 's/\\\\\//\//g' | sed 's/[{}]//g' | awk -v k="text" '{n=split($0,a,","); for (i=1; i<=n; i++) print a[i]}' | sed 's/\"\:\"/\|/g' | sed 's/[\,]/ /g' | sed 's/\"//g' | grep -w $prop| cut -d":" -f2| sed -e 's/^ *//g' -e 's/ *$//g'
	echo ${temp##*|}
}

function jsonval2() { # This takes a { "key" : "value" } pair in "myFile.txt"
	PAIR=$(<myFile.txt)
	IFS=': ' read -a arr <<< $PAIR
	ONE="${arr[1]%?}"
	TWO="${ONE%?}"
	THREE=${TWO#'"'}
	echo $THREE
}

function jsonval3() { # This takes a { "key" : "value" } pair
	PAIR='{"myKeyName":"myKeyValueVariableLength"}'
	[[ $PAIR =~ ^\{\"([^\"]+)\":\"([^\"]+)\"\}$ ]] && 
		echo "The key is ${BASH_REMATCH[1]} and the value is ${BASH_REMATCH[2]}"
}