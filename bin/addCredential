#!/bin/bash

#
# addCredential
# adds a credential to a Developer App
#
# usage:
#   addCredential app_name consumer_key consumer_secret api_product

#set -e

USAGE="app_name consumer_key consumer_secret api_product"
TOOLSDIR="${APITOOLS_HOME}"

. "$TOOLSDIR/lib/functions"

parseCommandline "$@"
checkArgs 4
loadConfig "${ARGS[0]}"
APP_NAME=${ARGS[0]}
CONSUMER_KEY=${ARGS[1]}
CONSUMER_SECRET=${ARGS[2]}
API_PRODUCT=${ARGS[3]}
APP_NAME_ESCAPED=`uri_escape "$APP_NAME"`

# Create the credential
URL="${APIGEE_HOST}/o/${ORGANIZATION}/developers/${DEVELOPER}/apps/${APP_NAME_ESCAPED}/keys/create"
BODY="{\"consumerKey\":\"${CONSUMER_KEY}\",\"consumerSecret\":\"${CONSUMER_SECRET}\",\"apiProducts\":[{\"apiproduct\":\"${API_PRODUCT}\"}]}"
output=`curl -s -S --basic -u "$CREDENTIALS" -X POST -H "Accept: application/json" -H "Content-Type: application/json" --data-binary "$BODY" -w "\n%{http_code}" "${URL}"`
RESPONSE=`echo "$output" | sed '$ d'`
STATUS_CODE=`echo "$output" | tail -n 1`
if [ "$STATUS_CODE" != "201" ]; then
	fail "$(basename "$0") failed with status $STATUS_CODE: $RESPONSE"
fi
debug "response is $RESPONSE"

# Update the credential
"$TOOLSDIR/updateCredential" ${OPTS[@]} "${ARGS[0]}" "$APP_NAME" "$CONSUMER_KEY" "$CONSUMER_SECRET" "$API_PRODUCT"

# Set the credential api product
"$TOOLSDIR/setCredentialApiProduct" ${OPTS[@]} "${ARGS[0]}" "$APP_NAME" "$CONSUMER_KEY" "$API_PRODUCT"
