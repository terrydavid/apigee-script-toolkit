#!/bin/bash

# cmpApiVersions
#

# usage:
#   cmpApiVersions environment ApiProxyName
#set -e

USAGE="org-environment apiproxyname"
TOOLSDIR="${APITOOLS_HOME}"

. "$TOOLSDIR/lib/functions"

parseCommandline "$@"
loadConfig "${ARGS[0]}"

API="${ARGS[1]}"

printf "%-35s%6s%10s\n" "API" "Latest" "Deployed"
LATEST_VERSION=`getApiVersionLatest ${OPTS[@]} "$HOST_ALIAS" "$API"`
debug "LATEST_VERSION=$LATEST_VERSION"

DEPLOYED_VERSION=( $(getApiVersionDeployed ${OPTS[@]} "$HOST_ALIAS" "$API" 2>/dev/null) )
debug "DEPLOYED_VERSION=$DEPLOYED_VERSION"

printf "%-35s%6s%10s%s\n" "$API" "$LATEST_VERSION" "$DEPLOYED_VERSION" "$TAG"


if [ "$DEPLOYED_VERSION" == "$LATEST_VERSION" ] ; then
	echo -e "Versions are the same: $LATEST_VERSION"
else
	dlApi ${OPTS[@]} "$HOST_ALIAS" "$API" "$LATEST_VERSION" "$API"-"$LATEST_VERSION".zip 2>/dev/null
	unzip -oq $API-$LATEST_VERSION.zip -d $API-$LATEST_VERSION 2>&1 >/dev/null
	if [[ "_$DEPLOYED_VERSION" != "_" ]] ; then
		dlApi ${OPTS[@]} "$HOST_ALIAS" "$API" "$DEPLOYED_VERSION" "$API"-"$DEPLOYED_VERSION".zip 2>/dev/null
		unzip -oq $API-$DEPLOYED_VERSION.zip -d $API-$DEPLOYED_VERSION 2>&1 >/dev/null
		diff -br "$API-$DEPLOYED_VERSION/" "$API-$LATEST_VERSION/"
	else
		echo -e "API Proxy $API has NO Deployed Version"
	fi
fi
