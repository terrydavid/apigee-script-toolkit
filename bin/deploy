#!/bin/bash
 
# deploy
#
# deploys the specified version of an API to an environment 
# (This script DOES NOT undeploy any deployed versions of the API - call undeploy first!)
#
# usage:
#   deploy environment api version
#		environment the environment to deploy to
#		api the name of the api to deploy
# 		version the version to deploy (use "latest" to deploy the latest version)

#set -e

USAGE="host-env_alias api version"
TOOLSDIR="${APITOOLS_HOME}"

. "$TOOLSDIR/config/global"
. "$TOOLSDIR/lib/functions"

parseCommandline "$@"

loadConfig "${ARGS[0]}"

APINAME=${ARGS[1]}
if [ "$APINAME" = "" ]; then
	usefail "no API name specified"
fi

VERSION=${ARGS[2]}
if [ "$VERSION" = "latest" ]; then
	VERSION=`getApiVersionLatest ${OPTS[@]} "$HOST_ALIAS" "$APINAME"`
	if [ "$VERSION" = "" ]; then
		fail "no versions of API $APINAME in environment $ENVIRONMENT"
	fi
fi
if [ "$VERSION" = "" ]; then
	usefail "no version specified"
fi

URL="${APIGEE_HOST}/o/${ORGANIZATION}/apis/${APINAME}/deployments?action=deploy&env=${ENVIRONMENT}&revision=${VERSION}"
echo "deploying version $VERSION of API $APINAME in environment $ENVIRONMENT"
http_post "$URL"
if [ "$STATUS_CODE" != "200" ]; then
	fail "$(basename "$0") failed with status $STATUS_CODE: $RESPONSE"
fi
