#!/bin/bash

# getDeployedApiVersion
#
# retrieves the revision number of any versions of an API that are deployed to an environment
#
# usage:
#   getDeployedApiVersion environment api

#set -e

USAGE="environment api"
TOOLSDIR="${APITOOLS_HOME}"

. "$TOOLSDIR/config/global"
. "$TOOLSDIR/lib/functions"

parseCommandline "$@"
checkArgs 2

loadConfig "${ARGS[0]}"

API_NAME=${ARGS[1]}

URL="${APIGEE_HOST}/o/${ORGANIZATION}/e/${ENVIRONMENT}/apis/$(uri_escape "$API_NAME")/deployments"
#URL="${APIGEE_HOST}/o/${ORGANIZATION}/apis/$API_NAME/deployments

#FRMT=json

debug "retrieving deployments of API ${API_NAME} from ${URL}"
http_get "$URL"
if [ "$STATUS_CODE" == "400" ]; then
	echo "STATUS_CODE= $STATUS_CODE"
elif [ "$STATUS_CODE" != "200" ]; then
	fail "$(basename "$0") failed with status $STATUS_CODE: $RESPONSE"
fi

debug "RESPONSE=\n$RESPONSE"
#APILIST=`echo "$RESPONSE" | sed 's/\"//g' | awk 'BEGIN { RS = "[\n\r]+" } ; /revision.*0.*state/ {print $2}'`
if [ "$FRMT" = "json" ] ; then
	APILIST=`echo "$RESPONSE" | jsonValueOf "revision.*,0,.*state"`
else
	APILIST=`echo "$RESPONSE" | xmlValueOf "\(State\)\|\(Status\)"`
fi
debug "APILIST=\n$APILIST"
for a in $APILIST ; do printf "%b\n" $a | sed 's/\"//g' ; done
