#!/bin/bash
 
#
# createCache
# creates a cache
#
# usage:
#   createCache environment cache_name description timeout_sec max_elements size_kb

#set -e

USAGE="environment cache_name description timeout_sec max_elements size_kb"
TOOLSDIR="${APITOOLS_HOME}"

. "$TOOLSDIR/config/global"
. "$TOOLSDIR/lib/functions"

parseCommandline "$@"
checkArgs 6

loadConfig "${ARGS[0]}"

cache_name="${ARGS[1]}"
description="${ARGS[2]}"
timeout_sec="${ARGS[3]}"
max_elements_in_memory="${ARGS[4]}"
in_memory_size="${ARGS[5]}"
disk_size=0
max_elements_on_disk=0
overflow_to_disk=false
persistent=false

URL="${APIGEE_HOST}/o/${ORGANIZATION}/e/${ENVIRONMENT}/caches"

BODY="{\"description\":\"${description}\",\"diskSizeInMB\":${disk_size},\"expirySettings\":{\"timeoutInSec\":{\"value\":\"${timeout_sec}\"}},\"inMemorySizeInKB\":${in_memory_size},\"maxElementsInMemory\":${max_elements_in_memory},\"maxElementsOnDisk\":${max_elements_on_disk},\"name\":\"${cache_name}\",\"overflowToDisk\":${overflow_to_disk},\"persistent\":${persistent}}"
debug "POSTing $BODY to $URL"
output=`curl -s -S --basic -u "$CREDENTIALS" -X POST -H "Accept: application/json" -H "Content-Type: application/json" --data-binary "$BODY" -w "\n%{http_code}" "${URL}"`
RESPONSE=`echo "$output" | sed '$ d'`
STATUS_CODE=`echo "$output" | tail -n 1`
if [ "$STATUS_CODE" != "201" ]; then
	fail "$(basename "$0") failed with status $STATUS_CODE: $RESPONSE"
fi
echo "$RESPONSE"
